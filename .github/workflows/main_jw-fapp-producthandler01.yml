name: Build, Test, and Deploy to Azure Function App - jw-fapp-producthandler01

on:
  # Trigger when a pull request is opened, synchronized, or reopened targeting 'main'
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

  # Trigger after a pull request is merged into 'main'
  push:
    branches:
      - main

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use

jobs:
  build-and-test:
    runs-on: windows-latest

    permissions:
      id-token: write  # Add this line for id-token permissions

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet restore
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Tests'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet test --no-build --verbosity normal
          popd

  deploy:
    runs-on: windows-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    permissions:
      id-token: write  # Add this line for id-token permissions

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_40d03023-c470-45ab-b6ae-58e2ce1b4588 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_d3517acd-b985-4632-ad08-906c1551cbc1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_95cc1e69-f6fb-498a-ae9c-7a9c8511ccee }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'jw-fapp-producthandler01'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
